CPS305 Lab 3

---------------------------

Topics: 
------
  Huffman Coding

Files:
------
  Lab3-studentnumber.py
  Incorrectly named files will receive a mark of zero.

Submit Files:
------------
  Submit file through D2L

Summary:
--------

Given:  You are given a Python Class template. In this template, there
        2 classes: Node, MyHuffman. The goal of this lab is to
        implement a Huffman class that can encode and decode text.
        
Task:   - First, create a method called getName() that returns your 
        name. If this does not work, you will receive a mark of zero.
        
        - A class called MyHuffman is given. Implemt a method called 
        build(x) where x is a dictionary of characters to integers, 
        in which the integer is the frequency of that character. 
        The method should build a huffman tree based on these given 
        frequencies.
        
        - Implement a method called encode(x) that takes the string x 
        and returns a bitstring by applying the rules in your huffman 
        tree. A bit string is a standard string with only the 
        characters '0' and '1'.
        
        - Implement a method called decode(x) that takes the bitstring 
        x and returns a string by applying the rules in your huffman 
        tree.

Rule:   - The structure of the tree should adhere to the efficiency of 
        Huffman's algorithm. Implementation details are up to you.
        
        - The given Node class is there if you choose to use it.

Use Lab3Tester.py to test your code
Example command line:
$python Lab3Tester.py Lab3-123456789.py
